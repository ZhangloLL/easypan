<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easypan.mappers.EmailCodeMapper">

	<!--实体映射-->
	<resultMap id="base_result_map" type="com.easypan.entity.po.EmailCode">
		<!--邮箱-->
		<result column="email" property="email"  />
		<!--编号-->
		<result column="code" property="code"  />
	</resultMap>


	<!-- 通用查询结果列-->
	<sql id="base_column_list">
		 email,code
	</sql>

	<sql id="base_condition_filed">
			<if test="query.email != null and query.email!=''">
				 and  email = #{query.email}
			</if>
			<if test="query.code != null and query.code!=''">
				 and  code = #{query.code}
			</if>
	</sql>
	<!-- 通用条件列-->
	<sql id="base_condition">
	 <where>
		 <include refid="base_condition_filed" />
	 </where>
	</sql>

	<!-- 通用查询条件列-->
	<sql id="query_condition">
	 <where>
			<include refid="base_condition_filed" />
			<if test="query.emailFuzzy!= null  and query.emailFuzzy!=''">
				 and  email like concat('%', #{query.emailFuzzy}, '%')
			</if>
			<if test="query.codeFuzzy!= null  and query.codeFuzzy!=''">
				 and  code like concat('%', #{query.codeFuzzy}, '%')
			</if>
	 </where>
	</sql>

	<!-- 查询集合-->
	<select id="selectList" resultMap="base_result_map" >
		 SELECT <include refid="base_column_list" /> FROM email_code <include refid="query_condition" />
		 <if test="query.orderBy!=null">
			 order by ${query.orderBy}
		 </if>
		 <if test="query.simplePage!=null">
			 limit #{query.simplePage.start},#{query.simplePage.end}
		 </if>
	</select>

	<!-- 查询数量-->
	<select id="selectCount" resultType="java.lang.Integer" >
		 SELECT count(1) FROM email_code <include refid="query_condition" />
	</select>

	<!-- 插入 （匹配有值的字段）-->
	<insert id="insert" parameterType="com.easypan.entity.po.EmailCode">
		 INSERT INTO email_code
		 <trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="bean.email != null">
				 email,
			</if>
			<if test="bean.code != null">
				 code,
			</if>
		 </trim>
		 <trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="bean.email!=null">
				 #{bean.email},
			</if>
			<if test="bean.code!=null">
				 #{bean.code},
			</if>
		 </trim>
	</insert>

	<!-- 插入或者更新 （匹配有值的字段）-->
	<insert id="insertOrUpdate" parameterType="com.easypan.entity.po.EmailCode">
		 INSERT INTO email_code
		 <trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="bean.email != null">
				 email,
			</if>
			<if test="bean.code != null">
				 code,
			</if>
		 </trim>
		 <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="bean.email!=null">
				 #{bean.email},
			</if>
			<if test="bean.code!=null">
				 #{bean.code},
			</if>
		 </trim>
		 on DUPLICATE key update 
		 <trim prefix="" suffix="" suffixOverrides=",">
			<if test="bean.email!=null">
				 email = VALUES(email),
			</if>
			<if test="bean.code!=null">
				 code = VALUES(code),
			</if>
		 </trim>
	</insert>

	<!-- 添加 （批量插入）-->
	<insert id="insertBatch" parameterType="com.easypan.entity.po.EmailCode">
		 INSERT INTO email_code(
			 email,
			 code
		 )values
		 <foreach collection="list" item="item" separator=",">
			 (
				 #{item.email},
				 #{item.code}
			 )
		 </foreach>
	</insert>

	<!-- 批量新增修改 （批量插入）-->
	<insert id="insertOrUpdateBatch" parameterType="com.easypan.entity.po.EmailCode">
		 INSERT INTO email_code(
			 email,
			 code
		 )values
		 <foreach collection="list" item="item" separator=",">
			 (
				 #{item.email},
				 #{item.code}
			 )
		 </foreach>
			on DUPLICATE key update 
			email = VALUES(email),
			code = VALUES(code)
	</insert>

	<!--多条件修改-->
	<update id="updateByParam" parameterType="com.easypan.entity.query.EmailCodeQuery">
		 UPDATE email_code
 		 <set> 
			<if test="bean.email != null">
				 email = #{bean.email},
			</if>
			<if test="bean.code != null">
				 code = #{bean.code},
			</if>
 		 </set>
 		 <include refid="query_condition" />
	</update>

	<!--多条件删除-->
	<delete id="deleteByParam">
		 delete from email_code
 		 <include refid="query_condition" />
	</delete>

	<!-- 根据EmailAndCode修改-->
	<update id="updateByEmailAndCode" parameterType="com.easypan.entity.po.EmailCode">
		 UPDATE email_code
 		 <set> 
 		 </set>
 		 where email=#{email} and code=#{code}
	</update>

	<!-- 根据EmailAndCode删除-->
	<delete id="deleteByEmailAndCode">
		delete from email_code where email=#{email} and code=#{code}
	</delete>

	<!-- 根据PrimaryKey获取对象-->
	<select id="selectByEmailAndCode" resultMap="base_result_map" >
		select <include refid="base_column_list" /> from email_code where email=#{email} and code=#{code}
	</select>

</mapper>